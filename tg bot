import logging

from telegram import ForceReply, Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logging.getLogger("httpx").setLevel(logging.WARNING)

logger = logging.getLogger(__name__)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Send a message when the command /start is issued."""
    user = update.effective_user
    await update.message.reply_html(
        rf"Hi {user.mention_html()}!",
        reply_markup=ForceReply(selective=True),
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Send a message when the command /help is issued."""
    await update.message.reply_text("Help!")


async def sanjar(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("напиши Санджару если есть вопрос")


async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Echo the user message."""
    if 'Санджар' in update.message.text or 'санджар' in update.message.text:
        await update.message.reply_text("Санджар - самый лучший чел на свете!")
    else:
        await update.message.reply_text(f'Я получил сообщение {update.message.text}')


def main() -> None:
    """Start the bot."""

    application = Application.builder().token("6662439465:AAFIY1nxwPtnB1cv0zp4T5GEdlmBKgEoGdc").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("sanjar", sanjar))
    application.add_handler(CommandHandler("help", help_command))

    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == "__main__":
    main()
